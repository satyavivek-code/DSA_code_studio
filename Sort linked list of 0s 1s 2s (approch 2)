[ Approch ]

by using dummy nodes we store the data of 0s, 1s, 2s in dummy nodes and then merge these nodes;

/********************************
    class Node
    {
    public:
        int data;
        Node *next;
        Node(int data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

********************************/
void insertAtTail(Node* &tail, Node* temp){
    tail -> next = temp;
    tail  = temp;
}
Node* sortList(Node *head)
{
    // Write your code here.
    Node* zeroHead = new Node(-1);
    Node* zeroTail = zeroHead;
    Node* oneHead = new Node(-1);
    Node* oneTail = oneHead;
    Node* twoHead = new Node(-1);
    Node* twoTail = twoHead;

    Node* temp = head;


    // inserting the value to the dummy node

    while (temp != NULL){
        int value = temp -> data;
        if (value == 0){
            insertAtTail (zeroTail, temp);
        }
        else if (value == 1){
            insertAtTail (oneTail, temp);
        }
        else if (value == 2){
            insertAtTail(twoTail, temp);
        }
        temp = temp -> next;
    }

    // now merge the above three dummy nodes

    if (oneHead -> next != NULL){
        zeroTail -> next = oneHead -> next;

    }
    else {
        zeroTail->next = twoHead ->next;
    }
    oneTail -> next = twoHead -> next;
    twoTail-> next = NULL;

    head = zeroHead -> next;

    delete zeroHead;
    delete oneHead;
    delete twoHead;

    return head;

}
